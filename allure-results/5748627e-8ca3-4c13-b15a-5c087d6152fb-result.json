{"name": "test_remove_all_items_from_cart", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Can't find elements ('class name', 'inventory_item_name')", "trace": "driver = <undetected_chromedriver.Chrome (session=\"24fb57727766bb24ff79ea640d53517c\")>\n\n    @allure.feature(\"Корзина\")\n    @pytest.fixture(scope=\"function\")\n    def login_and_add_items_to_cart(driver):\n        with allure.step('Авторизация и добавление товара в корзину'):\n            login_page = LogPage(driver)\n            login_page.open(URL)\n            login_page.enter_username(USERNAME)\n            login_page.enter_password(PASSWORD)\n            login_page.click_login_button()\n    \n            inventory_page = InventoryPage(driver)\n>           inventory_page.add_item_to_cart(\"Sauce Labs Backpack\")\n\ntests/test_cart_page.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/inventory_page.py:15: in add_item_to_cart\n    items = self.find_elements(InventPage.ITEM_NAME)\npages/base_page.py:18: in find_elements\n    return WebDriverWait(self.driver, timeout=60).until(EC.presence_of_all_elements_located(locator),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"24fb57727766bb24ff79ea640d53517c\")>, method = <function presence_of_all_elements_located.<locals>._predicate at 0x7a5b6a7fc040>\nmessage = \"Can't find elements ('class name', 'inventory_item_name')\"\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Can't find elements ('class name', 'inventory_item_name')\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1733929726036, "stop": 1733929726036, "uuid": "1626acf3-bd8e-40cd-a72e-961576695ec8", "historyId": "1faf11dee08be5221133cd07fad50bb9", "testCaseId": "1faf11dee08be5221133cd07fad50bb9", "fullName": "tests.test_cart_page#test_remove_all_items_from_cart", "labels": [{"name": "story", "value": "Негативные тесты корзины"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_cart_page"}, {"name": "host", "value": "griffith"}, {"name": "thread", "value": "13076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_cart_page"}]}