{"name": "test_login_success[standard_user-secret_sauce]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Can't find element ('class name', 'inventory_list')\nStacktrace:\n#0 0x5a874cd49c5a <unknown>\n#1 0x5a874ca2ce2c <unknown>\n#2 0x5a874ca79661 <unknown>\n#3 0x5a874ca79751 <unknown>\n#4 0x5a874cabdf64 <unknown>\n#5 0x5a874ca9c5ed <unknown>\n#6 0x5a874cabb303 <unknown>\n#7 0x5a874ca9c363 <unknown>\n#8 0x5a874ca6c247 <unknown>\n#9 0x5a874ca6cb9e <unknown>\n#10 0x5a874cd1022b <unknown>\n#11 0x5a874cd142d1 <unknown>\n#12 0x5a874ccfbade <unknown>\n#13 0x5a874cd14e32 <unknown>\n#14 0x5a874cce077f <unknown>\n#15 0x5a874cd39618 <unknown>\n#16 0x5a874cd397f0 <unknown>\n#17 0x5a874cd48d8c <unknown>\n#18 0x7a8b96494ac3 <unknown>", "trace": "driver = <undetected_chromedriver.Chrome (session=\"24fb57727766bb24ff79ea640d53517c\")>, username = 'standard_user', password = 'secret_sauce'\n\n    @allure.feature(\"Авторизация\")\n    @allure.story(\"Положительные тесты авторизации\")\n    @pytest.mark.parametrize(\n        \"username, password\",\n        [(\"standard_user\", \"secret_sauce\")]\n    )\n    def test_login_success(driver, username, password):\n        with allure.step(\"Открываем страницу авторизации\"):\n            login_page = LogPage(driver)\n            login_page.open(URL)\n    \n        with allure.step(f\"Выполняем вход с параметрами: username={username}, password={password}\"):\n            login_page.enter_username(username)\n            login_page.enter_password(password)\n            login_page.click_login_button()\n    \n        with allure.step(\"Проверяем успешный вход\"):\n            inventory_page = InventoryPage(driver)\n>           assert inventory_page.is_inventory_displayed(), \"Список товаров не отображается\"\n\ntests/test_login_page.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/inventory_page.py:8: in is_inventory_displayed\n    return bool(self.find_element(InventPage.INVENTORY_LIST))\npages/base_page.py:14: in find_element\n    return WebDriverWait(self.driver, timeout=60).until(EC.presence_of_element_located(locator),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"24fb57727766bb24ff79ea640d53517c\")>, method = <function presence_of_element_located.<locals>._predicate at 0x7a5b6a6b3b50>\nmessage = \"Can't find element ('class name', 'inventory_list')\"\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Can't find element ('class name', 'inventory_list')\nE       Stacktrace:\nE       #0 0x5a874cd49c5a <unknown>\nE       #1 0x5a874ca2ce2c <unknown>\nE       #2 0x5a874ca79661 <unknown>\nE       #3 0x5a874ca79751 <unknown>\nE       #4 0x5a874cabdf64 <unknown>\nE       #5 0x5a874ca9c5ed <unknown>\nE       #6 0x5a874cabb303 <unknown>\nE       #7 0x5a874ca9c363 <unknown>\nE       #8 0x5a874ca6c247 <unknown>\nE       #9 0x5a874ca6cb9e <unknown>\nE       #10 0x5a874cd1022b <unknown>\nE       #11 0x5a874cd142d1 <unknown>\nE       #12 0x5a874ccfbade <unknown>\nE       #13 0x5a874cd14e32 <unknown>\nE       #14 0x5a874cce077f <unknown>\nE       #15 0x5a874cd39618 <unknown>\nE       #16 0x5a874cd397f0 <unknown>\nE       #17 0x5a874cd48d8c <unknown>\nE       #18 0x7a8b96494ac3 <unknown>\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "steps": [{"name": "Открываем страницу авторизации", "status": "passed", "start": 1733930402961, "stop": 1733930403216}, {"name": "Выполняем вход с параметрами: username=standard_user, password=secret_sauce", "status": "passed", "start": 1733930403216, "stop": 1733930403795}, {"name": "Проверяем успешный вход", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Can't find element ('class name', 'inventory_list')\nStacktrace:\n#0 0x5a874cd49c5a <unknown>\n#1 0x5a874ca2ce2c <unknown>\n#2 0x5a874ca79661 <unknown>\n#3 0x5a874ca79751 <unknown>\n#4 0x5a874cabdf64 <unknown>\n#5 0x5a874ca9c5ed <unknown>\n#6 0x5a874cabb303 <unknown>\n#7 0x5a874ca9c363 <unknown>\n#8 0x5a874ca6c247 <unknown>\n#9 0x5a874ca6cb9e <unknown>\n#10 0x5a874cd1022b <unknown>\n#11 0x5a874cd142d1 <unknown>\n#12 0x5a874ccfbade <unknown>\n#13 0x5a874cd14e32 <unknown>\n#14 0x5a874cce077f <unknown>\n#15 0x5a874cd39618 <unknown>\n#16 0x5a874cd397f0 <unknown>\n#17 0x5a874cd48d8c <unknown>\n#18 0x7a8b96494ac3 <unknown>\n\n", "trace": "  File \"/media/grifftih/Linux/TestCases/SwagLabs/tests/test_login_page.py\", line 26, in test_login_success\n    assert inventory_page.is_inventory_displayed(), \"Список товаров не отображается\"\n  File \"/media/grifftih/Linux/TestCases/SwagLabs/pages/inventory_page.py\", line 8, in is_inventory_displayed\n    return bool(self.find_element(InventPage.INVENTORY_LIST))\n  File \"/media/grifftih/Linux/TestCases/SwagLabs/pages/base_page.py\", line 14, in find_element\n    return WebDriverWait(self.driver, timeout=60).until(EC.presence_of_element_located(locator),\n  File \"/media/grifftih/Linux/TestCases/SwagLabs/.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1733930403795, "stop": 1733930464173}], "parameters": [{"name": "username", "value": "'standard_user'"}, {"name": "password", "value": "'secret_sauce'"}], "start": 1733930402961, "stop": 1733930464192, "uuid": "2f0986af-59aa-46d3-845e-da4952ea85ae", "historyId": "857b3af173651b924267d049f44aa6f3", "testCaseId": "bde57f0f004b3555f1fcaace3860febd", "fullName": "tests.test_login_page#test_login_success", "labels": [{"name": "story", "value": "Положительные тесты авторизации"}, {"name": "feature", "value": "Авторизация"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_page"}, {"name": "host", "value": "griffith"}, {"name": "thread", "value": "13076-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_page"}]}