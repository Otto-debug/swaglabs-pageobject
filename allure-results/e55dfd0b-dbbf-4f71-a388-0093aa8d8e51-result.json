{"name": "test_checkout_step_one_success", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Can't find element ('id', 'checkout')\nStacktrace:\n#0 0x5b4d23dd8c5a <unknown>\n#1 0x5b4d23abbe2c <unknown>\n#2 0x5b4d23b08661 <unknown>\n#3 0x5b4d23b08751 <unknown>\n#4 0x5b4d23b4cf64 <unknown>\n#5 0x5b4d23b2b5ed <unknown>\n#6 0x5b4d23b4a303 <unknown>\n#7 0x5b4d23b2b363 <unknown>\n#8 0x5b4d23afb247 <unknown>\n#9 0x5b4d23afbb9e <unknown>\n#10 0x5b4d23d9f22b <unknown>\n#11 0x5b4d23da32d1 <unknown>\n#12 0x5b4d23d8aade <unknown>\n#13 0x5b4d23da3e32 <unknown>\n#14 0x5b4d23d6f77f <unknown>\n#15 0x5b4d23dc8618 <unknown>\n#16 0x5b4d23dc87f0 <unknown>\n#17 0x5b4d23dd7d8c <unknown>\n#18 0x7e65e0294ac3 <unknown>", "trace": "driver = <undetected_chromedriver.Chrome (session=\"b8cf123f991f700e619ea54ab991d80a\")>\n\n    @allure.feature(\"Шаг 1 оформление заказа\")\n    @pytest.fixture(scope=\"function\")\n    def navigate_to_checkout_step_one(driver):\n        with allure.step(\"Авторизация и добавление товаров в корзину\"):\n            login_page = LogPage(driver)\n            login_page.open(URL)\n            login_page.enter_username(USERNAME)\n            login_page.enter_password(PASSWORD)\n            login_page.click_login_button()\n    \n        with allure.step(\"Добавляем товар в корзину\"):\n            inventory_page = InventoryPage(driver)\n            inventory_page.add_item_to_cart(\"Sauce Labs Backpack\")\n            inventory_page.click_cart_button()\n    \n        with allure.step(\"Переходим к оформлению заказа\"):\n            cart_page = CartPage(driver)\n>           cart_page.button_checkout()\n\ntests/test_checkout_page.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/cart_page.py:20: in button_checkout\n    self.find_element(CarTPage.CHECKOUT_BUTTON).click()\npages/base_page.py:14: in find_element\n    return WebDriverWait(self.driver, timeout=60).until(EC.presence_of_element_located(locator),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b8cf123f991f700e619ea54ab991d80a\")>, method = <function presence_of_element_located.<locals>._predicate at 0x7567bfb7cb80>\nmessage = \"Can't find element ('id', 'checkout')\"\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Can't find element ('id', 'checkout')\nE       Stacktrace:\nE       #0 0x5b4d23dd8c5a <unknown>\nE       #1 0x5b4d23abbe2c <unknown>\nE       #2 0x5b4d23b08661 <unknown>\nE       #3 0x5b4d23b08751 <unknown>\nE       #4 0x5b4d23b4cf64 <unknown>\nE       #5 0x5b4d23b2b5ed <unknown>\nE       #6 0x5b4d23b4a303 <unknown>\nE       #7 0x5b4d23b2b363 <unknown>\nE       #8 0x5b4d23afb247 <unknown>\nE       #9 0x5b4d23afbb9e <unknown>\nE       #10 0x5b4d23d9f22b <unknown>\nE       #11 0x5b4d23da32d1 <unknown>\nE       #12 0x5b4d23d8aade <unknown>\nE       #13 0x5b4d23da3e32 <unknown>\nE       #14 0x5b4d23d6f77f <unknown>\nE       #15 0x5b4d23dc8618 <unknown>\nE       #16 0x5b4d23dc87f0 <unknown>\nE       #17 0x5b4d23dd7d8c <unknown>\nE       #18 0x7e65e0294ac3 <unknown>\n\n.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1733928317310, "stop": 1733928317310, "uuid": "b988efdc-76f2-45b8-af46-779181a60431", "historyId": "dea08b7b07959d8b727a49da99396038", "testCaseId": "dea08b7b07959d8b727a49da99396038", "fullName": "tests.test_checkout_page#test_checkout_step_one_success", "labels": [{"name": "story", "value": "Положительные тесты"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_checkout_page"}, {"name": "host", "value": "griffith"}, {"name": "thread", "value": "11472-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_checkout_page"}]}